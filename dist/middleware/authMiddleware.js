import jwt from 'jsonwebtoken';
export const authMiddleware = (req, res, next) => {
    const token = req.headers.authorization?.replace('Bearer ', '');
    console.log('üîç AuthMiddleware - Token recebido:', token ? 'Sim' : 'N√£o');
    console.log('üîç AuthMiddleware - JWT_SECRET configurado:', process.env.JWT_SECRET ? 'Sim' : 'N√£o');
    if (!token) {
        console.log('‚ùå Token n√£o fornecido');
        return res.status(401).json({ error: 'Token n√£o fornecido' });
    }
    try {
        const decoded = jwt.verify(token, process.env.JWT_SECRET || 'secret');
        console.log('‚úÖ Token decodificado:', decoded);
        req.user = decoded;
        next();
    }
    catch (error) {
        console.log('‚ùå Erro ao verificar token:', error);
        return res.status(401).json({ error: 'Token inv√°lido' });
    }
};
// ‚úÖ Fun√ß√£o adminOnly removida - role n√£o est√° mais no JWT
